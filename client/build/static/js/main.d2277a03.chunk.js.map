{"version":3,"sources":["components/Header.js","components/Task.js","components/AddTask.js","components/AllTasks.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Task","props","onClick","e","handleDoneTask","id","isDone","taskText","handleDeleteTask","AddTask","useState","value","setValue","onSubmit","preventDefault","handeleAddTask","showAddTask","type","name","onChange","target","AllTasks","prop","setState","prevstate","taskToChange","newState","state","allTasks","map","task","_id","idTaskToDelete","console","log","axios","put","then","res","forEach","data","isValid","handleDeleteAll","text","newTask","post","get","prevProps","length","this","json","JSON","stringify","localStorage","setItem","filter","filterdTask","React","Component","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2277a03.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/styles.scss';\r\n\r\nexport const Header = () => (\r\n    <div className=\"header\">\r\n        <h3>To-Do List</h3>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport {BsXCircle} from 'react-icons/bs';\r\nimport {BsCheckBox} from 'react-icons/bs';\r\nimport {BsSquare} from 'react-icons/bs'\r\n\r\nconst Task = (props) => (\r\n    <div className=\"task-container\">\r\n        <span\r\n            onClick={(e) => {\r\n                props.handleDoneTask(props.id);\r\n            }}\r\n            className= {props.isDone ? \"task-isDone\" : \"\"}\r\n        >\r\n            {props.isDone ?<BsCheckBox/> :  <BsSquare/>}{props.taskText}\r\n        </span>\r\n        <BsXCircle\r\n            onClick={(e) => {\r\n                props.handleDeleteTask(props.id);\r\n            }}\r\n            />\r\n    </div>\r\n)\r\n\r\nexport default Task;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nexport const AddTask = (props) => {\r\n    const[value,setValue] = useState(\"\");\r\n    return (\r\n        <form \r\n            className=\"addTask-form\" \r\n            onSubmit={(e) => {\r\n                e.preventDefault(); \r\n                props.handeleAddTask(value); \r\n                props.showAddTask();\r\n            }}\r\n        >\r\n            <input className='addTask-input' type='text' name='addTask' onChange={(e) => setValue(e.target.value)} />\r\n            <button className=\"addTask-button\">Add Task</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n// export const AddTask = (props) => (\r\n    \r\n//         <form \r\n//             className=\"addTask-form\" \r\n//             onSubmit={props.handeleAddTask}\r\n//         >\r\n//             <input className='addTask-input' type='text' name='addTask'  />\r\n//             <button className=\"addTask-button\">Add Task</button>\r\n//         </form>\r\n// );\r\n","import React from 'react';\r\nimport Task from './Task';\r\nimport {AddTask} from './AddTask';\r\nimport {CgPlayListAdd} from \"react-icons/cg\";\r\nimport axios from 'axios';\r\n\r\nexport default class AllTasks extends React.Component{\r\n    constructor(prop){\r\n        super(prop);\r\n        this.state = {\r\n            allTasks: [],\r\n            showAddTask: false\r\n        }; \r\n    }\r\n    \r\n    showAddTask = () => {\r\n        this.setState((prevstate) => ({showAddTask: !prevstate.showAddTask}))\r\n    }\r\n    \r\n    handleDoneTask = (taskToChange) => {\r\n        const newState = {...this.state};\r\n        newState.allTasks.map(task => {\r\n            if(taskToChange === task._id)\r\n                task.isDone = !task.isDone;\r\n            return task;\r\n        })\r\n\r\n        this.setState({state: newState})\r\n    }\r\n\r\n    handleDeleteTask = (idTaskToDelete) => {\r\n        console.log(idTaskToDelete);\r\n       axios.put(`http://localhost:4000/task/${idTaskToDelete}`)\r\n       .then(res => {\r\n           var newState = this.state.allTasks;\r\n           newState.forEach(task => {\r\n               if(task._id === res.data._id) task.isValid = false;\r\n           });\r\n           this.setState({allTasks: newState});    \r\n       })\r\n    }\r\n\r\n    handleDeleteAll = () => {\r\n        this.setState({allTasks: []});\r\n    }\r\n    \r\n    handeleAddTask = (text) => {\r\n        if(text === \"\")\r\n            return;\r\n        const newTask = {\r\n            taskText: text,\r\n            isDone: false,\r\n            isValid: true\r\n        };\r\n        axios.post(`http://localhost:4000/task`, {newTask})\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n        })\r\n        this.setState({allTasks: [...this.state.allTasks, newTask]});\r\n\r\n    }\r\n    componentDidMount() {\r\n        try{ \r\n            axios.get(`http://localhost:4000/task`)\r\n            .then(res => {\r\n                console.log(\"this is from component did mount\");\r\n                console.log(\"res data\",res.data);\r\n                var allTasks = [];\r\n\r\n                console.log(\"all task \",allTasks)\r\n                this.setState({allTasks: res.data});\r\n            })\r\n        } catch (e) {\r\n                console.log(\"errororor\");\r\n        }\r\n   \r\n    }\r\n    //     handeleAddTask = (text) => {\r\n    //     if(text === \"\")\r\n    //         return;\r\n    //     const newTask = {\r\n    //         id: this.state.allTasks.length,\r\n    //         taskText: text,\r\n    //         isDone: false,\r\n    //         isValid: true\r\n    //     };\r\n    //     axios.post(`http://localhost:4000/`, { newTask })\r\n    //         .then(res => {\r\n    //             console.log(res);\r\n    //             console.log(res.data);\r\n    //         })\r\n\r\n    // }\r\n    // componentDidMount() {\r\n    //     try{ \r\n    //         axios.get(`http://localhost:4000/`)\r\n    //         .then(res => {\r\n    //             const persons = res.data;\r\n    //             this.setState({ persons });\r\n    //         })\r\n    //     } catch (e) {\r\n    //         //nothing at all!\r\n    //     }\r\n   \r\n    // }\r\n\r\n    componentDidUpdate(prevProps , prevstate) {\r\n        if (prevstate.allTasks.length !== this.state.allTasks.length) {\r\n            const json =JSON.stringify(this.state.allTasks);\r\n            localStorage.setItem('allTasks' , json);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"AllTasks\">\r\n                <div className=\"AllTasks-container\">\r\n                    <div className=\"AllTasks-title_container\">\r\n                        <div className=\"AllTasks-title\">Still in progress:</div>\r\n                        <CgPlayListAdd\r\n                            onClick={(e) => {\r\n                                this.showAddTask();\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {this.state.showAddTask && <AddTask handeleAddTask = {this.handeleAddTask} showAddTask = {this.showAddTask}/>}\r\n                    {\r\n                        this.state.allTasks.filter(task => task.isValid && !task.isDone).map(filterdTask => (\r\n                            <Task\r\n                                id={filterdTask._id}\r\n                                taskText={filterdTask.taskText}\r\n                                isDone={filterdTask.isDone}\r\n                                isValid={filterdTask.isValid}\r\n                                handleDoneTask = {this.handleDoneTask}\r\n                                handleDeleteTask = {this.handleDeleteTask}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"AllTasks-container\">\r\n                    <div className=\"AllTasks-title_container\">\r\n                        <div className=\"AllTasks-title\">Done:</div>\r\n                    </div>\r\n                    {\r\n                        this.state.allTasks.filter(task => task.isValid && task.isDone).map(filterdTask => (\r\n                            <Task\r\n                                id={filterdTask._id}\r\n                                taskText={filterdTask.taskText}\r\n                                isDone={filterdTask.isDone}\r\n                                isValid={filterdTask.isValid}\r\n                                handleDoneTask = {this.handleDoneTask}\r\n                                handleDeleteTask = {this.handleDeleteTask}\r\n                            />\r\n                        ))\r\n                    } \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './styles/styles.scss';\nimport React from 'react';\nimport { Header } from './components/Header';\nimport Task from './components/Task';\nimport AllTasks from './components/AllTasks';\nimport axios from 'axios';\n\n\nexport default class app extends React.Component {\n  state = {\n    \n  };\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <AllTasks />\n        \n      </div>\n    );\n  }\n}\n\n\n// {/* <button\n//         onClick = {() => {\n//           axios.get('http://localhost:4000/task/read-all').then((res) => {console.log(res)})\n//           axios.post('http://localhost:4000/task',{name: \"shay\"}).then((res) => {console.log(res)})\n//         }}>check</button> */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}